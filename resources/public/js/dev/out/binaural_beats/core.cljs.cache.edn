{:rename-macros {}, :renames {}, :use-macros {reaction reagent.ratom}, :excludes #{}, :name binaural-beats.core, :imports nil, :requires {audio binaural-beats.audio, bce binaural-beats.barchart-editor, binaural-beats.utils binaural-beats.utils, u binaural-beats.utils, reagent.core reagent.core, r reagent.core, binaural-beats.barchart-editor binaural-beats.barchart-editor, cljs.pprint cljs.pprint, binaural-beats.colors binaural-beats.colors, binaural-beats.audio binaural-beats.audio, se binaural-beats.spline-editor, binaural-beats.spline-editor binaural-beats.spline-editor}, :uses {pprint cljs.pprint, atom reagent.core, palettes binaural-beats.colors, tval binaural-beats.utils}, :defs {state {:name binaural-beats.core/state, :file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/core.cljs", :line 13, :column 1, :end-line 13, :end-column 11, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/core.cljs", :line 13, :column 6, :end-line 13, :end-column 11}}, binaural-editor {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/core.cljs", :line 53, :column 7, :end-line 53, :end-column 22, :arglists (quote ([{:keys [track settings]}]))}, :name binaural-beats.core/binaural-editor, :variadic false, :file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/core.cljs", :end-column 22, :method-params ([p__38456]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [track settings]}]))}, main {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/core.cljs", :line 104, :column 7, :end-line 104, :end-column 11, :arglists (quote ([]))}, :name binaural-beats.core/main, :variadic false, :file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent.ratom reagent.ratom, r reagent.core, reagent.core reagent.core, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:y :harmonics :binaural :min :envelope :selected :key :button :assets :name :value :tracks :width :settings :type :duration :points :max-duration :div.multi-spline :on-click :bounds :style :div :option :duration-step :max :fq :40px :delta :gain :fqs :pink :x :input :ranges :h1 :ctx :on-change :step :deltas :tracks-settings :range :height :select :span :track}, :order [:name :assets :duration :max-duration :duration-step :tracks :tracks-settings :type :delta :fq :gain :harmonics :binaural :pink :selected :width :height :range :style :bounds :step :ranges :track :settings :x :y :div.multi-spline :select :value :on-change :option :key :span :input :min :max :40px :points :div :h1 :button :on-click :ctx :deltas :fqs :envelope]}, :doc nil}