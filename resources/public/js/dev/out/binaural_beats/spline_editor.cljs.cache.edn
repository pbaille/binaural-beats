{:rename-macros {}, :renames {}, :use-macros {reaction reagent.ratom, attrs> binaural-beats.macros, styles> binaural-beats.macros}, :excludes #{}, :name binaural-beats.spline-editor, :imports nil, :requires {r reagent.core, reagent.core reagent.core, u binaural-beats.utils, binaural-beats.utils binaural-beats.utils, cljsjs.d3 cljsjs.d3}, :uses {atom reagent.core, d3 binaural-beats.utils, js> binaural-beats.utils}, :defs {mousemove {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([{:keys [padding state svg width height on-done]}]))}, :name binaural-beats.spline-editor/mousemove, :variadic false, :file "src/binaural_beats/spline_editor.cljs", :end-column 16, :method-params ([p__29064]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [padding state svg width height on-done]}]))}, mousedown {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 28, :column 7, :end-line 28, :end-column 16, :arglists (quote ([{:keys [svg state on-done]}]))}, :name binaural-beats.spline-editor/mousedown, :variadic false, :file "src/binaural_beats/spline_editor.cljs", :end-column 16, :method-params ([p__29070]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [svg state on-done]}]))}, keydown {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 43, :column 7, :end-line 43, :end-column 14, :arglists (quote ([{:keys [state on-done]}]))}, :name binaural-beats.spline-editor/keydown, :variadic false, :file "src/binaural_beats/spline_editor.cljs", :end-column 14, :method-params ([p__29082]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [state on-done]}]))}, default-styles {:name binaural-beats.spline-editor/default-styles, :file "src/binaural_beats/spline_editor.cljs", :line 73, :column 1, :end-line 73, :end-column 20, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 73, :column 6, :end-line 73, :end-column 20}}, simple-styles {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 91, :column 7, :end-line 91, :end-column 20, :arglists (quote ([c1 c2 c3]))}, :name binaural-beats.spline-editor/simple-styles, :variadic false, :file "src/binaural_beats/spline_editor.cljs", :end-column 20, :method-params ([c1 c2 c3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c1 c2 c3]))}, merged-with-defaults {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 109, :column 7, :end-line 109, :end-column 27, :arglists (quote ([s]))}, :name binaural-beats.spline-editor/merged-with-defaults, :variadic false, :file "src/binaural_beats/spline_editor.cljs", :end-column 27, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, redraw {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 117, :column 7, :end-line 117, :end-column 13, :arglists (quote ([{:keys [this state sync-fn], :as opts}]))}, :name binaural-beats.spline-editor/redraw, :variadic false, :file "src/binaural_beats/spline_editor.cljs", :end-column 13, :method-params ([p__29101]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [this state sync-fn], :as opts}]))}, init {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 194, :column 7, :end-line 194, :end-column 11, :arglists (quote ([{:keys [this state sync-fn]}]))}, :name binaural-beats.spline-editor/init, :variadic false, :file "src/binaural_beats/spline_editor.cljs", :end-column 11, :method-params ([p__29114]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [this state sync-fn]}]))}, spline-editor {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/spline_editor.cljs", :line 245, :column 7, :end-line 245, :end-column 20, :arglists (quote ([{:keys [width height style ranges points]}]))}, :name binaural-beats.spline-editor/spline-editor, :variadic false, :file "src/binaural_beats/spline_editor.cljs", :end-column 20, :method-params ([p__29123]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height style ranges points]}]))}}, :require-macros {reagent.ratom reagent.ratom, binaural-beats.macros binaural-beats.macros, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :r :stroke :selected :#FAFAFA :4px :this :fill :component-did-mount :sync-fn :width :background :lines :component-did-update :state :points :style :reagent-render :stroke-width :on-done :div.spline-editor-wrap :padding :selected-point :svg :x :dragged :ranges :border :border-radius :height}, :order [:padding :state :svg :width :height :on-done :dragged :selected :points :selected-point :lines :background :fill :stroke :stroke-width :r :border :border-radius :4px :#FAFAFA :this :sync-fn :style :x :y :ranges :reagent-render :component-did-update :component-did-mount :div.spline-editor-wrap]}, :doc nil}