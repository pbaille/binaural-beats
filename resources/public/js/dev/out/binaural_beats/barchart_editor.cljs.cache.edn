{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name binaural-beats.barchart-editor, :imports nil, :requires {u binaural-beats.utils, binaural-beats.utils binaural-beats.utils, r reagent.core, reagent.core reagent.core}, :uses {d3 binaural-beats.utils, js> binaural-beats.utils}, :defs {keydown {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/barchart_editor.cljs", :line 7, :column 7, :end-line 7, :end-column 14, :arglists (quote ([{:keys [state on-done]}]))}, :name binaural-beats.barchart-editor/keydown, :variadic false, :file "src/binaural_beats/barchart_editor.cljs", :end-column 14, :method-params ([p__29284]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [state on-done]}]))}, mouse-upd {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/barchart_editor.cljs", :line 17, :column 7, :end-line 17, :end-column 16, :arglists (quote ([{:keys [svg bar-width bar-margin bar-max-height], :as opts}]))}, :name binaural-beats.barchart-editor/mouse-upd, :variadic false, :file "src/binaural_beats/barchart_editor.cljs", :end-column 16, :method-params ([p__29295]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [svg bar-width bar-margin bar-max-height], :as opts}]))}, hover-tracker {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/barchart_editor.cljs", :line 26, :column 7, :end-line 26, :end-column 20, :arglists (quote ([{:keys [svg bar-width hover], :as opts}]))}, :name binaural-beats.barchart-editor/hover-tracker, :variadic false, :file "src/binaural_beats/barchart_editor.cljs", :end-column 20, :method-params ([p__29306]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [svg bar-width hover], :as opts}]))}, default-styles {:name binaural-beats.barchart-editor/default-styles, :file "src/binaural_beats/barchart_editor.cljs", :line 34, :column 1, :end-line 34, :end-column 20, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/barchart_editor.cljs", :line 34, :column 6, :end-line 34, :end-column 20}}, init {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/barchart_editor.cljs", :line 47, :column 7, :end-line 47, :end-column 11, :arglists (quote ([{:keys [node points width height styles]}]))}, :name binaural-beats.barchart-editor/init, :variadic false, :file "src/binaural_beats/barchart_editor.cljs", :end-column 11, :method-params ([p__29318]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [node points width height styles]}]))}, upd {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/barchart_editor.cljs", :line 74, :column 7, :end-line 74, :end-column 10, :arglists (quote ([{:keys [g svg points height bar-width dragged sync-fn styles bar-margin bar-max-height hover], :as opts}]))}, :name binaural-beats.barchart-editor/upd, :variadic false, :file "src/binaural_beats/barchart_editor.cljs", :end-column 10, :method-params ([p__29330]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [g svg points height bar-width dragged sync-fn styles bar-margin bar-max-height hover], :as opts}]))}, barchart-editor {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/Projects/binaural-beats/src/binaural_beats/barchart_editor.cljs", :line 128, :column 7, :end-line 128, :end-column 22, :arglists (quote ([opts]))}, :name binaural-beats.barchart-editor/barchart-editor, :variadic false, :file "src/binaural_beats/barchart_editor.cljs", :end-column 22, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:stroke :bar-margin :selected :bars :div.barchart-editor-wrap :fill :component-did-mount :sync-fn :width :background :bar-width :state :points :node :bar-max-height :g :hover :reagent-render :stroke-width :on-done :opacity :class :svg :styles :attrs :dragged :border :border-radius :height :margin}, :order [:state :on-done :points :selected :svg :bar-width :bar-margin :bar-max-height :hover :bars :attrs :margin :fill :opacity :stroke :stroke-width :styles :background :border :border-radius :class :node :width :height :sync-fn :g :dragged :reagent-render :component-did-mount :div.barchart-editor-wrap]}, :doc nil}